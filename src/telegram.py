import asyncio
import sys

import emoji
import os
import emoji
from loguru import logger
from telethon import TelegramClient
from telethon.tl.types import MessageMediaDocument, MessageMediaPhoto
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()


async def check_tg_account(self):
    # –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –≤ Telegram
    logger.info("–ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫–∫–∞—É–Ω—Ç–∞ Telegram...")
    try:
        api_id = os.getenv('TELEGRAM_API_ID')
        api_hash = os.getenv('TELEGRAM_API_HASH')
        
        if not api_id or not api_hash:
            raise ValueError("TELEGRAM_API_ID –∏ TELEGRAM_API_HASH –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤ .env —Ñ–∞–π–ª–µ")
        
        self.client = TelegramClient('QueVinchik', api_id=int(api_id), api_hash=api_hash)
        await self.client.start()
        logger.success("@" + (await self.client.get_me()).username)
        await self.client.send_message(self.bot_name, emoji.emojize(":thumbs_down:"))
        logger.info("–ê–∫–∫–∞—É–Ω—Ç Telegram –ø–æ–¥–∫–ª—é—á–µ–Ω")
    except Exception as e:
        logger.exception(f"–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –≤ Telegram: {e}")
        sys.exit()


async def wait_bot_response(self):
    """
    –û–∂–∏–¥–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –±–æ—Ç–∞ –≤ —á–∞—Ç–µ –∏ –≤–æ–∑–≤—Ä–∞—Ç –µ–≥–æ —Ç–µ–∫—Å—Ç–∞
    """
    while True:
        messages = await self.client.get_messages(self.bot_name, limit=1)
        if messages:
            msg = messages[0]
            sender = await msg.get_sender()
            if sender.username == self.bot_name:  # –°–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç –±–æ—Ç–∞
                messages = await self.client.get_messages(self.bot_name, limit=5)
                for msg in messages:
                    if msg.text:
                        return msg.text
        await asyncio.sleep(0.2)


async def get_bot_response_media(self):
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –º–µ–¥–∏–∞—Ñ–∞–π–ª–æ–≤ –∏–∑ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –±–æ—Ç–∞
    raw_messages = await self.client.get_messages(self.bot_name, limit=5)
    msgs = []
    for msg in raw_messages:
        sender = await msg.get_sender()
        if sender.username == self.bot_name:
            msgs.append(msg)
        else:
            break
    return [msg for msg in msgs if type(msg.media) == MessageMediaPhoto], [msg for msg in msgs if type(msg.media) == MessageMediaDocument]


async def skip_form(self):
    # –ü—Ä–æ–ø—É—Å–∫ –∞–Ω–∫–µ—Ç—ã (–æ—Ç–ø—Ä–∞–≤–∫–∞ –¥–∏–∑–ª–∞–π–∫–∞)
    await self.client.send_message(self.bot_name, emoji.emojize(":thumbs_down:"))


async def send_reply(self, text):
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –±–æ—Ç—É
    text = text.capitalize()
    logger.info(f"–û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞: {text}")
    await self.client.send_message(self.bot_name, text)


async def wait_user_action(self):
    """
    –û–∂–∏–¥–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–ª–∞–π–∫/–¥–∏–∑–ª–∞–π–∫) –≤ —á–∞—Ç–µ —Å –±–æ—Ç–æ–º
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç True –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–¥–µ–ª–∞–ª –ª–∞–π–∫, False –µ—Å–ª–∏ –¥–∏–∑–ª–∞–π–∫
    """
    # –ü–æ–ª—É—á–∞–µ–º ID –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–µ—Ä–µ–¥ –Ω–∞—á–∞–ª–æ–º –æ–∂–∏–¥–∞–Ω–∏—è
    initial_messages = await self.client.get_messages(self.bot_name, limit=10)
    last_msg_id = initial_messages[0].id if initial_messages else 0
    
    logger.info("–û–∂–∏–¥–∞–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–ª–∞–π–∫/–¥–∏–∑–ª–∞–π–∫)...")
    
    while True:
        await asyncio.sleep(0.5)
        
        # –ü–æ–ª—É—á–∞–µ–º –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        messages = await self.client.get_messages(self.bot_name, limit=10)
        
        # –ò—â–µ–º –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        for msg in messages:
            # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å—Ç–∞—Ä—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
            if msg.id <= last_msg_id:
                continue
                
            sender = await msg.get_sender()
            me = await self.client.get_me()
            
            # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –Ω–∞—Å
            if sender.id == me.id and msg.text:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —ç–º–æ–¥–∑–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏
                if "‚ù§Ô∏è" in msg.text:
                    logger.success("–û–±–Ω–∞—Ä—É–∂–µ–Ω –ª–∞–π–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
                    return True
                elif "üëé" in msg.text:
                    logger.info("–û–±–Ω–∞—Ä—É–∂–µ–Ω –¥–∏–∑–ª–∞–π–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
                    return False
                else:
                    # –û–±–Ω–æ–≤–ª—è–µ–º ID –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞–Ω–∏—è —Å–ª—É–∂–µ–±–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
                    last_msg_id = msg.id
                    continue
